[tox]
skipsdist = false
skip_missing_interpreters = true
usedevelop = true
minversion = 4.0
envlist =
    fix
    py{313}-dj{41,42,51,52,main}
    py{312}-dj{51,52}
    py{311}-dj{41,42}
    py{310}-dj{32,52}
    py{39}-dj{32,42}
    type
    pkg_meta

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313, type, pkg_meta

[testenv]
description = Run the unit tests with pytest under {base_python}
usedevelop = true
setenv =
    DJANGO_SETTINGS_MODULE = tests.settings.main
    DJANGO_CONFIGURATION = Test
    COVERAGE_PROCESS_START = {toxinidir}/coverage.cfg
    COVERAGE_FILE = {work_dir}/.coverage.{env_name}
deps =
    dj32: django~=3.2.0
    dj41: django~=4.1.0
    dj42: django~=4.2.0
    dj51: django~=5.1.0
    dj52: django~=5.2.0
    djmain: https://github.com/django/django/archive/main.tar.gz
    py313: setuptools
    py313: wheel
    coverage
    coverage_enable_subprocess
extras = testing
package = wheel
wheel_build_env = .pkg
pass_env =
    DIFF_AGAINST
    PYTEST_*
commands =
    python -m pytest {tty:--color=yes} {posargs: \
      --cov-config pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{env_tmp_dir}{/}htmlcov --cov-report xml:{work_dir}{/}coverage.{env_name}.xml \
      --junitxml {work_dir}{/}junit.{env_name}.xml \
      tests}
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {work_dir}{/}coverage.{env_name}.xml --fail-under 100
dependency_groups = test

[[testenv:fix]
description = Format the code base to project standard
skip_install = true
deps =
    pre-commit-uv>=4.1.4
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = Run type check on code base
deps = mypy>=1.15
commands =
    mypy --follow-imports skip --no-site-packages --ignore-missing-imports src/dj_configurator

[testenv:pkg_meta]
description = check that the long description is valid
skip_install = true
deps =
    check-wheel-contents>=0.6.1
    twine>=6.1
    uv>=0.5.31
commands =
    uv build --sdist --wheel --out-dir {env_tmp_dir} .
    twine check {env_tmp_dir}{/}*
    check-wheel-contents --no-config {env_tmp_dir}


[testenv:docs]
setenv =
deps =
    -r docs/requirements.txt
commands =
    sphinx-build \
        -b html \
        -a \
        -W \
        -n \
        docs \
        docs/_build/html
